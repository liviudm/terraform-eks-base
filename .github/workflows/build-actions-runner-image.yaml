name: Build runner image(s)

on:
  push:
    paths:
      - 'docker/actions-runner/**'
      - '.github/workflows/build-actions-runner-image.yaml'
    branches:
      - main
  pull_request:
    paths:
      - 'docker/actions-runner/**'
      - '.github/workflows/build-actions-runner-image.yaml'
    branches:
      - main
    types:
      - closed
  schedule:
    - cron:  '0 7 * * 1'

jobs:
  build-misc:
    name: 'Build Custom runner image for Misc runner(s)'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MISC_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.MISC_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, publish
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: actions-runner
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -f ${GITHUB_WORKSPACE}/docker/actions-runner/Dockerfile \
            ${GITHUB_WORKSPACE}/docker/actions-runner
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  build-filecoin:
    name: 'Build Custom runner image for FileCoin runner(s)'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.FILECOIN_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.FILECOIN_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, publish
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: actions-runner
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -f ${GITHUB_WORKSPACE}/docker/actions-runner/Dockerfile \
            ${GITHUB_WORKSPACE}/docker/actions-runner
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  build-otterfish:
    name: 'Build Custom runner image for OtterFish runner(s)'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.OTTERFISH_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.OTTERFISH_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, publish
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: actions-runner
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -f ${GITHUB_WORKSPACE}/docker/actions-runner/Dockerfile \
            ${GITHUB_WORKSPACE}/docker/actions-runner
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
